@use 'variables' as *;
@use 'sass:color';
.select {
  display: flex;
  flex-direction: column;
  width: fit-content;
  padding: 1rem;
  label {
    padding: 0.2rem;
    width: fit-content;
  }
  &__top-section {
    display: flex;
    flex-wrap: wrap;
    padding-block: 0.5rem;
    color: white;
    gap: 0.2rem;
    width: 100%;
    max-width: 320px;
  }
  &__container {
    border: 2px solid $primaryColor;
    border-radius: 4px;
    padding: 5px;
    width: 320px;
    position: relative;
    cursor: pointer;
    user-select: none;
    background: $inputBackgroundColor;

    &.open {
      border-bottom: none;
      border-radius: 4px 4px 0 0;
    }
    > button {
      background-color: transparent;
      width: 100%;
      border: none;
    }
    &--input {
      display: flex;
      justify-content: space-between;
      width: 100%;

      input {
        background: transparent;
        padding-left: 0.5rem;
        border: none;
        outline: none;
        font-size: medium;
        &::placeholder {
          color: $placeHolderColor;
        }
      }
    }
    &.disabled {
      cursor: not-allowed;
      filter: grayscale(100%) brightness(0.85);
      opacity: 0.8;

      &::after {
        content: '';
        position: absolute;
        inset: 0;
        border-radius: 4px;
        background-color: rgba(220, 220, 220, 0.4);
        z-index: 5;
      }
    }
  }
  &__dropdown {
    position: absolute;
    top: 100%;
    left: -2px;
    width: 320px;
    border: 2px solid $primaryColor;
    border-radius: 0 0 4px 4px;
    background: $inputBackgroundColor;
    z-index: 10;
    padding-block: 0.5rem;
    border-top: none;
    li {
      padding: 0.5rem;
      border-top: 1px solid $backgroundArticleColor;
      transition:
        background-color 0.2s ease,
        transform 0.2s ease;

      &:hover {
        background-color: $primaryColor;
        color: $secondaryTextColor;
        transform: translateY(-1px);
      }

      &.selected {
        background-color: $backgroundArticleColor;
        font-weight: bold;
      }
    }
    &--scroll {
      overflow-y: auto;
      max-height: 150px;
    }
  }
}

.error-message {
  display: flex;
  justify-content: flex-end;
  color: color.adjust($color: $secondaryColor, $lightness: 30%);
}

.animate-dropdown {
  animation: dropdown-enter 600ms ease 0s 1 normal forwards;
  will-change: transform, opacity;
  transform-origin: top;
}

@keyframes dropdown-enter {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/***DELETE WHEN THE CHIP COMPONENT IS INTREGRATED  ***/
.chip {
  background-color: red;
  font-size: small;
  width: fit-content;
  padding: 0.2rem 0.5rem;
  border-radius: 0.2rem;
  button {
    background-color: transparent;
    border-radius: 50%;
    font-size: small;
    color: white;
    border: none;
    padding: 0;
    margin-left: 0.5rem;
    padding-inline: 0.2rem;
    cursor: pointer;
    &:hover {
      background-color: color.adjust($color: red, $lightness: 10%);
    }
  }
}
/***END DELETE ZONE  ***/
