name: CD - Deploy Front

on:
  workflow_run:
    workflows: ["CI - Build & tests"]
    types:
      - completed

jobs:
  deploy:
    name: üöÄ D√©ploiement sur le VPS
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest

    steps:
      - name: üîê Ajouter la cl√© SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519_${{ secrets.PROJECT_NAME }}
          chmod 600 ~/.ssh/id_ed25519_${{ secrets.PROJECT_NAME }}
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: üê≥ Pull et run le conteneur sur le VPS
        run: |
          ssh -i ~/.ssh/id_ed25519_${{ secrets.PROJECT_NAME }} -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            docker stop ${{ secrets.PROJECT_NAME }} || true &&
            docker rm ${{ secrets.PROJECT_NAME }} || true &&
            docker pull ${{ secrets.DOCKER_USERNAME }}/travel-blog-front:latest &&
            docker run -d --name ${{ secrets.PROJECT_NAME }} \
              --label traefik.enable=true \
              --label 'traefik.http.routers.travelblog.rule=Host(\"travel-blog.cloud\")' \
              --label traefik.http.routers.travelblog.entrypoints=websecure \
              --label traefik.http.routers.travelblog.tls.certresolver=letsencrypt \
              --label 'traefik.http.routers.travelblogwww.rule=Host(\"www.travel-blog.cloud\")' \
              --label traefik.http.routers.travelblogwww.entrypoints=websecure \
              --label traefik.http.routers.travelblogwww.tls.certresolver=letsencrypt \
              --label traefik.http.routers.travelblogwww.service=travelblog \
              --label traefik.http.services.travelblog.loadbalancer.server.port=80 \
              --network traefik \
              ${{ secrets.DOCKER_USERNAME }}/travel-blog-front:latest
          "
